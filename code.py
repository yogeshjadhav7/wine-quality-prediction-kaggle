import osimport pandas as pdfrom sklearn .model_selection import StratifiedShuffleSplitimport numpy as npINPUT_FILE = "winequality-red.csv"def load_wine_data(file=INPUT_FILE):    csv_path = os.path.join("", file)    return pd.read_csv(csv_path)data = load_wine_data(INPUT_FILE)data.head()split = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)for train_index, test_index in split.split(data, data["quality_label"]):    strat_train_set = data.loc[train_index]    strat_test_set = data.loc[test_index]data["quality_label"].value_counts() / len(data)strat_train_set["quality_label"].value_counts() / len(strat_train_set)from sklearn.base import BaseEstimator, TransformerMixinfree_sulfur_ix, total_sulfur_ix = 5, 6class CombinedAttributesAdder(BaseEstimator, TransformerMixin):    def __int__(self, merge_sulfur_cols=True):        self.merge_sulfur_cols = merge_sulfur_cols    def fit(self, X, y=None):        return self    def transform(self, X, y=None):        if(self.merge_sulfur_cols):            free_per_total_sulfur = X[:, free_sulfur_ix] / X[:, total_sulfur_ix]            np.c_[X]